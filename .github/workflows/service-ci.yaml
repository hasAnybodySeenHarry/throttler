name: Service-CI
on:
  push:
    branches:
    - 'main'
    - 'develop'
    - 'feature/**'
    - 'feat/**'
    - 'release/**'
    - 'releases/**'
    path-ignore:
    - 'migrations/**'
    - 'remote/**'
    - 'charts/**'

env:
  GO_VERSION: '1.22'
  HELM_VERSION: 'v3.13.3'
  HELM_FOLDER: ./app

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Vet source code
      run: |
        go vet ./...
    
    - name: Run unit tests
      run: |
        go test ./...
  
  static-analysis:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install linter
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s latest

    - name: Run linter
      run: |
        ./bin/golangci-lint run

  validate-helm:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Helm
      uses: azure/setup-helm@v3
      with:
        version: ${{ env.HELM_VERSION }}

    - name: Lint Helm Chart
      run: |
        helm lint ${{ env.HELM_FOLDER }}

  containerize:
    runs-on: ubuntu-latest
    needs: [unit-tests, static-analysis, validate-helm]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build the image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          docker.io/${{ secrets.DOCKERHUB_USERNAME }}/throttler:latest

  package-helm:
    runs-on: ubuntu-latest
    needs: [unit-tests, static-analysis, validate-helm]
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Package Chart
      run: |
        helm package ${{ env.HELM_FOLDER }} --destination charts
        helm repo index charts --url ${{ vars.HELM_REPO_URL }}

    - name: Commit and push
      run: |
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

        if [[ $(git status --porcelain) ]]; then
          if ! git add .; then
            echo "Error: Failed to stage files"
          fi

          if ! git commit -m "Updated from ref: ${{ github.sha }}"; then
            echo "Error: Failed to commit files"
          fi

          if ! git push; then
            if ! git pull --rebase && git push; then
              echo "Error: failed to push the code."
              exit 1
            fi
          fi
        else
          echo "Nothing to commit."
        fi