name: Staging CI pipeline
on:
  push:
    branches: ['release/**']
jobs:
  repo-meta:
    uses: hasAnybodySeenHarry/workflows/.github/workflows/gen-repo-meta.yaml@main

  promote-image:
    needs: [repo-meta]
    runs-on: ubuntu-latest
    outputs:
      chart_version: ${{ steps.chart-version.outputs.CHART_VERSION }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Find Commit SHA for Staging
      id: image-sha
      run: |
        BASE_COMMIT=$(git rev-parse "${{ github.ref_name }}")
        echo "BASE_COMMIT=${BASE_COMMIT}" >> $GITHUB_ENV
        echo $BASE_COMMIT

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Promote Image
      run: |
        IMAGE_NAME=docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ needs.repo-meta.outputs.repository_name }}
        NEW_TAG=${BASE_COMMIT}-staging

        echo "Pulling image: ${IMAGE_NAME}:${BASE_COMMIT}"
        docker pull ${IMAGE_NAME}:${BASE_COMMIT}
        docker tag ${IMAGE_NAME}:${BASE_COMMIT} ${IMAGE_NAME}:${NEW_TAG}

        echo "Pushing image: ${IMAGE_NAME}:${NEW_TAG}"
        docker push ${IMAGE_NAME}:${NEW_TAG}

    - name: Retrieve chart version
      id: chart-version
      run: |
        CHART_VERSION="$(cat VERSION_HELM)"
        echo "CHART_VERSION=${CHART_VERSION}" >> $GITHUB_OUTPUT

  trigger-promote:
    runs-on: ubuntu-latest
    needs: [promote-image]
    steps:
    - name: Trigger Promotion
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.HELM_REPO_PAT }}
        repository: ${{ vars.HELM_REPO_OWNER }}/${{ secrets.HELM_REPO_NAME }}
        event-type: promote
        client-payload: |
          {
            "ref": "${{ github.ref }}",
            "sha": "${{ github.sha }}",
            "chart_name": "throttler",
            "version": "${{ needs.promote-image.outputs.chart_version }}",
            "dest": "staging"
          }

  provision-cluster:
    needs: [repo-meta]
    runs-on: ubuntu-latest
    steps:
    - name: Provision Environment
      run: |
        echo "Provisioning the environment"